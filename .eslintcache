[{"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/index.js":"1","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/App.js":"2","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Details/Details.jsx":"3","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Details/styles.js":"4","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/styles.js":"5","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/Main.jsx":"6","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/styles.js":"7","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/Form/Form.jsx":"8","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/Form/styles.js":"9","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/List/List.jsx":"10","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/List/styles.js":"11","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/context/context.js":"12","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/context/contextReducer.js":"13","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/constants/categories.js":"14","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/utils/formatDate.js":"15","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/useTransactions.js":"16","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/InfoCard.jsx":"17","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Snackbar/Snackbar.jsx":"18","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Snackbar/styles.js":"19"},{"size":413,"mtime":1609206209812,"results":"20","hashOfConfig":"21"},{"size":1537,"mtime":1609209031568,"results":"22","hashOfConfig":"21"},{"size":661,"mtime":1609196722738,"results":"23","hashOfConfig":"21"},{"size":230,"mtime":1609088373982,"results":"24","hashOfConfig":"21"},{"size":552,"mtime":1609089087093,"results":"25","hashOfConfig":"21"},{"size":1301,"mtime":1609207960060,"results":"26","hashOfConfig":"21"},{"size":490,"mtime":1609089636785,"results":"27","hashOfConfig":"21"},{"size":5413,"mtime":1609208275813,"results":"28","hashOfConfig":"21"},{"size":235,"mtime":1609090292113,"results":"29","hashOfConfig":"21"},{"size":1686,"mtime":1609120612741,"results":"30","hashOfConfig":"21"},{"size":399,"mtime":1609097296993,"results":"31","hashOfConfig":"21"},{"size":2259,"mtime":1609207248693,"results":"32","hashOfConfig":"21"},{"size":579,"mtime":1609207281143,"results":"33","hashOfConfig":"21"},{"size":1710,"mtime":1609120859884,"results":"34","hashOfConfig":"21"},{"size":330,"mtime":1609788592828,"results":"35","hashOfConfig":"21"},{"size":1176,"mtime":1609196980071,"results":"36","hashOfConfig":"21"},{"size":439,"mtime":1609207868483,"results":"37","hashOfConfig":"21"},{"size":862,"mtime":1609208120803,"results":"38","hashOfConfig":"21"},{"size":196,"mtime":1609208142540,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"qulqru",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/index.js",[],["82","83"],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/App.js",["84"],"import React from \"react\";\n\nimport { useEffect, useRef } from \"react\";\n\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\n\nimport { Grid } from \"@material-ui/core\";\nimport {\n  PushToTalkButton,\n  PushToTalkButtonContainer,\n  ErrorPanel,\n} from \"@speechly/react-ui\";\n\nimport Main from \"./components/Main/Main\";\nimport Details from \"./components/Details/Details\";\nimport useStyles from \"./styles\";\n\nconst App = () => {\n  const classes = useStyles();\n  const { speechState } = useSpeechContext();\n  const main = useRef(null);\n\n  const executeScroll = () => main.current.scrollIntoView();\n\n  useEffect(() => {\n    if (speechState === SpeechState.Recording) {\n      executeScroll();\n    }\n  }, [speechState]);\n  return (\n    <div>\n      <Grid\n        className={classes.grid}\n        container\n        spacing={0}\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Grid item xs={12} sm={4} className={classes.mobile}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid ref={main} item xs={12} sm={3} className={classes.main}>\n          <Main />\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.desktop}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.last}>\n          <Details title=\"Expense\" />\n        </Grid>\n        <PushToTalkButtonContainer>\n          <PushToTalkButton />\n        </PushToTalkButtonContainer>\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Details/Details.jsx",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Details/styles.js",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/styles.js",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/Main.jsx",["85","86","87"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Grid,\n  Divider,\n} from \"@material-ui/core\";\nimport { useSpeechContext } from \"@speechly/react-client\";\nimport { ExpenseTrackerContext } from \"../../context/context\";\nimport useStyles from \"./styles\";\nimport Form from \"./Form/Form\";\nimport List from \"./List/List\";\nimport InfoCard from \"../InfoCard.jsx\";\n\nconst ExpenseTracker = () => {\n  const classes = useStyles();\n  const { balance } = useContext(ExpenseTrackerContext);\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\n      <CardContent>\n        <Typography align=\"center\" variant=\"h5\">\n          Total Balance ${balance}\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          style={{ lineHeight: \"1.5em\", marginTop: \"20px\" }}\n        >\n          <InfoCard />\n        </Typography>\n        <Divider className={classes.divider} />\n        <Form />\n      </CardContent>\n      <CardContent className={classes.cartContent}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <List />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ExpenseTracker;\n","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/styles.js",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/Form/Form.jsx",["88"],"import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  TextField,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { useSpeechContext } from \"@speechly/react-client\";\nimport Snackbar from \"../../Snackbar/Snackbar\";\nimport formatDate from \"../../../utils/formatDate\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\nimport {\n  incomeCategories,\n  expenseCategories,\n} from \"../../../constants/categories\";\nimport useStyles from \"./styles\";\n\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"Income\",\n  date: formatDate(new Date()),\n};\n\nconst NewTransactionForm = () => {\n  const classes = useStyles();\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n  const [formData, setFormData] = useState(initialState);\n  const { segment } = useSpeechContext();\n  const [open, setOpen] = React.useState(false);\n\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\n      return;\n\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\n      setFormData({ ...formData, type: \"Income\" });\n    } else if (\n      expenseCategories.map((iC) => iC.type).includes(formData.category)\n    ) {\n      setFormData({ ...formData, type: \"Expense\" });\n    }\n\n    setOpen(true);\n    addTransaction({\n      ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4(),\n    });\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === \"add_expense\") {\n        setFormData({ ...formData, type: \"Expense\" });\n      } else if (segment.intent.intent === \"add_income\") {\n        setFormData({ ...formData, type: \"Income\" });\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"create_transaction\"\n      ) {\n        return createTransaction();\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"cancel_transaction\"\n      ) {\n        return setFormData(initialState);\n      }\n\n      segment.entities.forEach((s) => {\n        const category = `${s.value.charAt(0)}${s.value\n          .slice(1)\n          .toLowerCase()}`;\n\n        switch (s.type) {\n          case \"amount\":\n            setFormData({ ...formData, amount: s.value });\n            break;\n          case \"category\":\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\n              setFormData({ ...formData, type: \"Income\", category });\n            } else if (\n              expenseCategories.map((iC) => iC.type).includes(category)\n            ) {\n              setFormData({ ...formData, type: \"Expense\", category });\n            }\n            break;\n          case \"date\":\n            setFormData({ ...formData, date: s.value });\n            break;\n          default:\n            break;\n        }\n      });\n\n      if (\n        segment.isFinal &&\n        formData.amount &&\n        formData.category &&\n        formData.type &&\n        formData.date\n      ) {\n        createTransaction();\n      }\n    }\n  }, [segment]);\n\n  const selectedCategories =\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\n\n  return (\n    <Grid container spacing={2}>\n      <Snackbar open={open} setOpen={setOpen} />\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n          {segment ? (\n            <div className=\"segment\">\n              {segment.words.map((w) => w.value).join(\" \")}\n            </div>\n          ) : null}\n          {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select\n            value={formData.category}\n            onChange={(e) =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            {selectedCategories.map((c) => (\n              <MenuItem key={c.type} value={c.type}>\n                {c.type}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"number\"\n          label=\"Amount\"\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          label=\"Date\"\n          type=\"date\"\n          value={formData.date}\n          onChange={(e) =>\n            setFormData({ ...formData, date: formatDate(e.target.value) })\n          }\n        />\n      </Grid>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={createTransaction}\n      >\n        Create\n      </Button>\n    </Grid>\n  );\n};\nexport default NewTransactionForm;\n","/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/Form/styles.js",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/List/List.jsx",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Main/List/styles.js",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/context/context.js",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/context/contextReducer.js",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/constants/categories.js",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/utils/formatDate.js",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/useTransactions.js",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/InfoCard.jsx",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Snackbar/Snackbar.jsx",[],"/Users/ashrafkhan/Desktop/Independant React Projects/expense_tracker/src/components/Snackbar/styles.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":11,"column":3,"nodeType":"95","messageId":"96","endLine":11,"endColumn":13},{"ruleId":"93","severity":1,"message":"97","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"98","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"99","line":10,"column":10,"nodeType":"95","messageId":"96","endLine":10,"endColumn":26},{"ruleId":"100","severity":1,"message":"101","line":113,"column":6,"nodeType":"102","endLine":113,"endColumn":15,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'ErrorPanel' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'useSpeechContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"109","text":"110"},[3138,3147],"[createTransaction, formData, segment]"]